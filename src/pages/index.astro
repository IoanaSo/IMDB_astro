---
import '../styles/global.css';
import { supabase } from '../lib/spClient';

// Obtener datos de la tabla "br1"
const { data: br, error } = await supabase
  .from('br1')
  .select('*')

if (error) {
  console.error('Error al obtener los datos de br1:', error.message)
}
---
<html lang="ca">
  <head>
    <meta charset="UTF-8" />
    <title>Cat√†leg IMDb</title>
  </head>
  <!--<body class="bg-gradient-to-br from-indigo-200 via-purple-200 to-pink-200 p-10 text-gray-900 font-sans">-->
   <body class="bg-gradient-to-r from-yellow-200 via-gray-200 to-grey-400 p-10 text-gray-900 font-sans">
    <!-- üîΩ Men√∫ principal -->
      <header class="mb-6">        <!--bg-gradient-to-br from-yellow-200 via-pink-200 to-purple-300-->
        <nav class="flex flex-col md:flex-row md:justify-between items-center gap-4 bg-gradient-to-r from-black via-gray-300 to-yellow-300 p-10 text-gray-900 font-sans rounded-xl shadow-lg">
          <img src="/assets/imbd.jpg" alt="IMBD image" class="imbd"/>
          <div class="dropdown">
            <!-- <button class="dropdown-button" onclick="toggleDropdown()">Bases de dades</button>-->
            <button id="dropdownToggle" class="dropdown-button bg-purple-500 hover:bg-purple-600">Bases de dades</button>
            <div class="dropdown-content" id="dropdownMenu">
              <a href="/br">Basic i Ratings</a>
              <a href="/akas">Akas</a>
              <a href="/crew">Crew</a>
              <a href="/episode">Episode</a>
              <a href="/namebasics">Namebasics</a>
              <a href="/principals">Principals</a>
            </div>
          </div>

          
          <!-- üîÄ Selector de seccions -->
          <div class="flex gap-2 mt-1">
            <button id="showTop10" class="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600">Top 10</button>
            <button id="showExplorer" class="bg-purple-500 text-white px-3 py-1 rounded hover:bg-purple-600">Explora</button>
          </div>


          <!-- üîç Cercador -->
          <div class="cercador relative flex items-center">
            <label for="searchType" class="font-semibold text-purple-600">Cerca per:</label>
            <select id="searchType" class="rounded border-gray-800">
              <option value="titles">T√≠tols</option>
              <option value="actors">Actors</option>
            </select>
            <div class="relative">
              <input type="text" id="searchInput" placeholder="Escriu aqu√≠..." class="rounded p-1 border" />
              <button id="clearSearch" class="absolute right-1 top-1 text-gray-500 hover:text-red-500 hidden">‚úï</button>
              <ul id="resultsList" class="absolute z-10 mt-2 w-full bg-white border rounded shadow text-left text-sm text-gray-700 hidden"></ul>
            </div>
          </div>
        </nav>
      </header>
    
    <!-- üìå Modal de detalls -->
    <div id="detailsModal" class="fixed inset-0 bg-black bg-opacity-25 backdrop-blur- flex items-center justify-center z-50 hidden">
      <div class="bg-white rounded-lg p-6 w-[90%] max-w-xl shadow-xl text-gray-800 relative">
          <button id="closeModal" class="absolute top-3 right-4 text-gray-500 hover:text-black text-lg">‚úñ</button>
          <h2 id="modalTitle" class="text-2xl font-bold mb-3"></h2>
          <p id="modalInfo" class="text-sm mb-4"></p>
        
          <!-- üî¢ Valoraci√≥ -->
          <label class="block mb-2 font-medium">Valora aquesta obra:</label>
          <div id="ratingButtons" class="flex flex-wrap gap-2 mb-4">
            <!-- Els botons es generaran amb JavaScript -->
          </div>
          <button id="submitRating" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">
            Enviar valoraci√≥
          </button>
      </div>
    </div>


    <!-- üé¨ Movies Carousel -->
    <!--bg-gradient-to-r from-pink-300 via-purple-300 to-indigo-400
    <section id="top10Section" class="mt-20 mb-10 p-6 bg-gradient-to-r  from-black via-grey-300 to-yellow-300 rounded-xl shadow-lg"> 
      <h2 class="text-3xl font-extrabold text-white mb-4">Top 10 Pel¬∑l√≠cules</h2>
      <div id="moviesCarousel" class="flex overflow-x-auto space-x-4 scroll-smooth snap-x snap-mandatory p-3">
    </section>-->
    
    <section id="top10Section" class="relative mt-20 mb-10 p-6 bg-gradient-to-r from-black via-gray-300 to-yellow-300 rounded-xl shadow-lg">
      <h2 class="text-3xl font-extrabold text-white mb-4">Top 10 Pel¬∑l√≠cules</h2>

      <div id="carouselWrapper" class="overflow-hidden w-full mx-2 relative p-4">
      
        <button id="prevBtn" class="absolute left-2 top-1/2 -translate-y-1/2 z-20 bg-white/80 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition duration-300">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        
        <button id="nextBtn" class="absolute right-2 top-1/2 -translate-y-1/2 z-20 bg-white/80 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition duration-300">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>


        <div id="moviesCarousel" class="flex transition-transform duration-500 ease-in-out z-100">
          <!-- targetes aqu√≠ -->
        </div>
      </div>
    </section>


    <!-- üì∫ Series Carousel -->
    <section id="seriesSection" class="relative mt-20 mb-10  p-6 bg-gradient-to-r from-black via-gray-300 to-yellow-300 rounded-xl shadow-lg">
      <h2 class="text-3xl font-extrabold text-white mb-4">Top 10 S√®ries</h2>
      <!-- <div id="seriesCarousel" class="flex overflow-x-auto space-x-4 scroll-smooth snap-x snap-mandatory p-3"></div>-->
        <div id="carouselWrapper" class="overflow-hidden w-full  mx-auto relative p-4">
        <button id="prevBtnS" class="absolute left-2 top-1/2 -translate-y-1/2 z-20 bg-white/80 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition duration-300">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
        
        <button id="nextBtnS" class="absolute right-2 top-1/2 -translate-y-1/2 z-20 bg-white/80 hover:bg-white text-gray-800 p-3 rounded-full shadow-lg transition duration-300">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>

        <div id="seriesCarousel" class="flex transition-transform duration-500 ease-in-out">
          <!-- targetes aqu√≠ -->
        </div>
      </div>
    </section>
    <!-- from-purple-300 via-pink-300 to-yellow-300  -->
    <section id="explorerSection" class="mt-20 mb-10 p-6 bg-gradient-to-r  from-black via-gray-300 to-yellow-300 rounded-xl shadow-lg">
      <h2 class="text-3xl font-extrabold text-white mb-6"> Explora pel¬∑l√≠cules i s√®ries</h2>

      <!-- Botones -->
      <div class="flex gap-4 mb-4">
        <button id="btnMovies" class="bg-indigo-600 text-white px-4 py-2 rounded hover:bg-indigo-700">Pel¬∑l√≠cules</button>
        <button id="btnSeries" class="bg-pink-600 text-white px-4 py-2 rounded hover:bg-pink-700">S√®ries</button>
      </div>

      <!-- Filtres -->
      <div class="flex flex-wrap gap-4 mb-6">
        <select id="sortSelect" class="rounded p-2 border border-gray-800 text-black bg-white">
          <option value="rating">Ordena per valoraci√≥</option>
          <option value="az">Nom A-Z</option>
          <option value="za">Nom Z-A</option>
        </select>

        <select id="genreSelect" class="rounded p-2 border border-gray-800 text-black bg-white">
          <option value="">Tots els g√®neres</option>
          <option value="Action">Acci√≥</option>
          <option value="Comedy">Com√®dia</option>
          <option value="Drama">Drama</option>
          <option value="Horror">Terror</option>
          <option value="Romance">Rom√†ntic</option>
        </select>
      </div>

      <!-- Contingut -->
      <div id="mediaGrid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 gap-4 mx-auto"></div>
    </section>

    <!-- üß† JS interactiu -->
    <script type="module">
        import { supabase } from '../lib/spClient';

        const input = document.getElementById('searchInput');
        const resultsList = document.getElementById('resultsList');
        const searchType = document.getElementById('searchType');
        const moviesCarousel = document.getElementById('moviesCarousel');
        const seriesCarousel = document.getElementById('seriesCarousel');

      // üîç Cercador interactiu
        const modal = document.getElementById('detailsModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalInfo = document.getElementById('modalInfo');
        const closeModal = document.getElementById('closeModal');
        const submitRating = document.getElementById('submitRating');

        
        const clearSearch = document.getElementById('clearSearch');

        // Mostrar o amagar la "X" segons si hi ha text
        searchInput.addEventListener('input', () => {
          if (searchInput.value.trim() !== '') {
            clearSearch.classList.remove('hidden');
          } else {
            clearSearch.classList.add('hidden');
            resultsList.classList.add('hidden');
          }
        });

        // Esborrar el contingut i amagar resultats
        clearSearch.addEventListener('click', () => {
          searchInput.value = '';
          clearSearch.classList.add('hidden');
          resultsList.classList.add('hidden');
          searchInput.focus();
        });


        // üõë Tancar modal
        closeModal.addEventListener('click', () => {
        modal.classList.add('hidden');
        });
        
        document.addEventListener("DOMContentLoaded", () => {
          const toggle = document.getElementById("dropdownToggle");
          const menu = document.getElementById("dropdownMenu");

          toggle.addEventListener("click", (e) => {
            e.stopPropagation();
            menu.style.display = menu.style.display === "block" ? "none" : "block";
          });

          window.addEventListener("click", (e) => {
            if (!toggle.contains(e.target)) {
              menu.style.display = "none";
            }
          });
        });


        // üîÑ Cercador amb modal
        input.addEventListener('input', async () => {
        const query = input.value.trim().toLowerCase();
        const type = searchType.value;
        resultsList.innerHTML = '';
        if (!query) return;

        let table = type === 'actors' ? 'namebasics1' : 'br1';
        let field = type === 'actors' ? 'primaryName' : 'primaryTitle';

        const { data } = await supabase.from(table).select('*').ilike(field, `%${query}%`).limit(10);
        if (data && data.length > 0) {
          resultsList.classList.remove('hidden');
          data.forEach(item => {
            const li = document.createElement('li');
            li.className = 'hover:bg-purple-100 p-2 rounded cursor-pointer transition';
            li.textContent = item[field];
            li.addEventListener('click', () => {
                // üßæ Mostrar informaci√≥
                modalTitle.textContent = item[field];
                modalInfo.innerHTML = `
                  <strong>Tipus:</strong> ${item.titleType ?? '‚Äî'}<br>
                  <strong>Any:</strong> ${item.startYear ?? '‚Äî'}<br>
                  <strong>G√®neres:</strong>  ${Array.isArray(item.genres) ? item.genres.join(', ') : item.genres.replace(/^\{|\}$/g, '') ?? '‚Äî'}<br>
                  <strong>Puntuaci√≥ mitjana:</strong> ${item.averageRating ?? '‚Äî'}<br>
                  <strong>Vots:</strong> ${item.numVotes ?? '‚Äî'}<br><br>
                  <a href="https://www.imdb.com/find?q=${encodeURIComponent(item[field])}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                    üîé Consulta a IMDb
                  </a>
                  `;

                  modal.classList.remove('hidden');

                    // ‚úçÔ∏è Enviar valoraci√≥

                  
                  const ratingButtonsContainer = document.getElementById('ratingButtons');
                  let selectedRating = null;

                  // üßπ Netejar botons anteriors
                  ratingButtonsContainer.innerHTML = '';

                  // Crear botons de 1 a 10
                  for (let i = 1; i <= 10; i++) {
                    const btn = document.createElement('button');
                    btn.textContent = i;
                    btn.className = 'px-3 py-1 border rounded hover:bg-indigo-100';
                    btn.onclick = () => {
                      selectedRating = i;
                      // Ressaltar el bot√≥ seleccionat
                      document.querySelectorAll('#ratingButtons button').forEach(b => b.classList.remove('bg-indigo-300'));
                      btn.classList.add('bg-indigo-300');
                    };
                    ratingButtonsContainer.appendChild(btn);
                  }


                  document.getElementById('submitRating').onclick = () => {
                    if (selectedRating !== null) {
                      alert(`Has valorat l'obra amb un ${selectedRating}/10!`);
                      modal.classList.add('hidden');
                      // Aqu√≠ pots afegir m√©s accions, com tancar un modal o enviar la dada al servidor

                      // üî¢ Actualitzar numVotes i averageRating
                      item.numVotes = (item.numVotes ?? 0) + 1;
                      item.averageRating = (
                        ((item.averageRating ?? 0) * (item.numVotes - 1) + selectedRating) / item.numVotes
                      ).toFixed(1); // Arrodonir a 1 decimal

                      // üîÑ Actualitzar visualment la targeta (si cal)
                      const updatedStars = '‚òÖ'.repeat(Math.round(item.averageRating)) + '‚òÜ'.repeat(5 - Math.round(item.averageRating));
                      card.querySelector('p.text-yellow-500').textContent = updatedStars;
                      card.querySelector('p.text-gray-700').textContent = `${item.averageRating} / 10`;
                      card.querySelector('p.text-gray-500').textContent = `üó≥Ô∏è ${item.numVotes} vots`;

                      // üîÑ Actualitzar tamb√© el contingut del modal
                      modalInfo.innerHTML = `
                        <strong>Tipus:</strong> ${item.titleType ?? '‚Äî'}<br>
                        <strong>Any:</strong> ${item.startYear ?? '‚Äî'}<br>
                        <strong>G√®neres:</strong> ${Array.isArray(item.genres) ? item.genres.join(', ') : (item.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                        <strong>Puntuaci√≥ mitjana:</strong> ${item.averageRating}<br>
                        <strong>Vots:</strong> ${item.numVotes}<br><br>
                        <a href="https://www.imdb.com/find?q=${encodeURIComponent(item[field])}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                          üîé Consulta a IMDb
                        </a>
                        `;
                      modal.classList.add('hidden');
                    } else {
                      alert("Si us plau, selecciona una valoraci√≥ entre 0 i 10.");
                    }
                  };
                });

                resultsList.appendChild(li);
                });
            } else {
                resultsList.innerHTML = "<li>No s'han trobat resultats.</li>";
            };
            });
        

        const createGenreBadges = (genresRaw) => {
            let genres = [];

            try {
                const parsed = typeof genresRaw === 'string' ? JSON.parse(genresRaw) : genresRaw;
                genres = Array.isArray(parsed) ? parsed : [parsed];
            } catch {
                genres = typeof genresRaw === 'string' ? genresRaw.replace(/^\{|\}$/g, '').split(',') : [genresRaw];
            }

            return genres.map(genre => `<span class="inline-block bg-purple-100 text-purple-700 text-xs font-medium px-2 py-1 rounded-full mr-1">${genre.trim()}</span>`).join('');
            };


        // üéûÔ∏è Pel¬∑l√≠cules millor valorades de `br1`

        
        let currentPage = 0;
        const itemsPerPage = 5;
        const cardWidth = 220; // amplada de cada targeta + espai

        const loadMovies = async () => {
        const { data: movies, error } = await supabase
            .from('br1')
            .select('primaryTitle, startYear, genres, averageRating, numVotes')
            .eq('titleType', 'movie')
            .gt('numVotes', 100000)
            .order('averageRating', { ascending: false })

        if (error) {
            console.error("Error carregant pel¬∑l√≠cules:", error);
            return;
        }

        movies.forEach(movie => {
            if (!movie.primaryTitle || movie.averageRating == null || isNaN(movie.averageRating)) return;

            const ratingOutOfFive = Math.max(0, Math.min(10, movie.averageRating)) / 2;
            const fullStars = Math.floor(ratingOutOfFive);
            const hasHalfStar = ratingOutOfFive % 1 >= 0.5;
            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

            const stars =
              '‚òÖ'.repeat(fullStars) +
              (hasHalfStar ? '‚Ø™' : '') + // o pots usar '‚≠í', '‚Ø®' ,'‚Ø™', o una icona SVG
              '‚òÜ'.repeat(emptyStars);


            const card = document.createElement('div');
            card.className = "min-w-[220px] bg-white rounded-lg p-4 shadow-lg text-center transform transition hover:scale-105 mx-3";

            const genreBadges = createGenreBadges(movie.genres);

            card.innerHTML = `
            <img src="/assets/top10.jpg" alt="TOP 10 BEST MOVIES" class="w-full rounded-lg shadow-md border border-gray-200 object-contain mb-3"/>
            <h3 class="text-lg font-bold text-indigo-600">${movie.primaryTitle}</h3>
            <p class="text-xl text-yellow-500 font-semibold">${stars}</p>
            <p class="text-sm text-gray-700">${movie.averageRating} / 10</p>
            <p class="text-xs text-gray-500">üó≥Ô∏è ${movie.numVotes ?? '‚Äî'} vots</p>
            <div class="text-xs text-gray-600 mt-1">${genreBadges}<br> <b>${movie.startYear ?? '‚Äî'}<b></div>
            `;
            
            card.addEventListener('click', () => {
              modalTitle.textContent = movie.primaryTitle;
              modalInfo.innerHTML = `
                <strong>Any:</strong> ${movie.startYear ?? '‚Äî'}<br>
                <strong>G√®neres:</strong> ${Array.isArray(movie.genres) ? movie.genres.join(', ') : (movie.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                <strong>Puntuaci√≥ mitjana:</strong> ${movie.averageRating ?? '‚Äî'}<br>
                <strong>Vots:</strong> ${movie.numVotes ?? '‚Äî'}<br><br>
                <a href="https://www.imdb.com/find?q=${encodeURIComponent(movie.primaryTitle)}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                    üîé Consulta a IMDb
                </a>
                `;
              modal.classList.remove('hidden');
                // ‚úçÔ∏è Enviar valoraci√≥
  
              const ratingButtonsContainer = document.getElementById('ratingButtons');
              ratingButtonsContainer.innerHTML = ''; // netejar abans de crear

              let selectedRating = null;

              for (let i = 1; i <= 10; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = 'px-3 py-1 border rounded hover:bg-indigo-100';
                btn.onclick = () => {
                  selectedRating = i;
                  document.querySelectorAll('#ratingButtons button').forEach(b => b.classList.remove('bg-indigo-300'));
                  btn.classList.add('bg-indigo-300');
                };
                ratingButtonsContainer.appendChild(btn);
              }

              document.getElementById('submitRating').onclick = () => {
                if (selectedRating !== null) {
                  alert(`Has valorat l'obra amb un ${selectedRating}/10!`);
                  modal.classList.add('hidden');
                // üî¢ Actualitzar numVotes i averageRating
                      movie.numVotes = (movie.numVotes ?? 0) + 1;
                      movie.averageRating = (
                        ((movie.averageRating ?? 0) * (movie.numVotes - 1) + selectedRating) / movie.numVotes
                      ).toFixed(1); // Arrodonir a 1 decimal

                      // üîÑ Actualitzar visualment la targeta (si cal)
                      const updatedStars = '‚òÖ'.repeat(Math.round(movie.averageRating)) + '‚òÜ'.repeat(5 - Math.round(movie.averageRating));
                      card.querySelector('p.text-yellow-500').textContent = updatedStars;
                      card.querySelector('p.text-gray-700').textContent = `${movie.averageRating} / 10`;
                      card.querySelector('p.text-gray-500').textContent = `üó≥Ô∏è ${movie.numVotes} vots`;

                      // üîÑ Actualitzar tamb√© el contingut del modal
                      modalInfo.innerHTML = `
                        <strong>Tipus:</strong> ${movie.titleType ?? '‚Äî'}<br>
                        <strong>Any:</strong> ${movie.startYear ?? '‚Äî'}<br>
                        <strong>G√®neres:</strong> ${Array.isArray(movie.genres) ? movie.genres.join(', ') : (movie.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                        <strong>Puntuaci√≥ mitjana:</strong> ${movie.averageRating}<br>
                        <strong>Vots:</strong> ${movie.numVotes}<br><br>
                        <a href="https://www.imdb.com/find?q=${encodeURIComponent(item[field])}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                          üîé Consulta a IMDb
                        </a>
                        `;
                      modal.classList.add('hidden');
                } else {
                  alert("Si us plau, selecciona una valoraci√≥ entre 0 i 10.");
                }
              };
            });

            moviesCarousel.appendChild(card);
        });
        };

        
        document.getElementById("nextBtn").addEventListener("click", () => {
          if (currentPage < 1) {
            currentPage++;
            moviesCarousel.style.transform = `translateX(-${itemsPerPage * cardWidth}px)`;
          }
        });

        document.getElementById("prevBtn").addEventListener("click", () => {
          if (currentPage > 0) {
            currentPage--;
            moviesCarousel.style.transform = `translateX(-${currentPage * itemsPerPage * cardWidth}px)`;
          }
        });

        document.addEventListener("DOMContentLoaded", loadMovies);

        //loadMovies();


        // üì∫ S√®ries millor valorades de `br1` (formato pel¬∑l√≠cula)
        const loadSeries = async () => {
        const { data: series, error } = await supabase
            .from('br1')
            .select('primaryTitle, startYear, genres, averageRating, numVotes')
            .eq('titleType', 'tvSeries')
            .gt('numVotes', 100000)
            .order('averageRating', { ascending: false })
            .limit(10);

        if (error) {
            console.error("Error carregant s√®ries:", error);
            return;
        }

        series.forEach(serie => {
            if (!serie.primaryTitle || serie.averageRating == null || isNaN(serie.averageRating)) return;

            //const rating = Math.max(0, Math.min(5, Math.round(serie.averageRating)));
            //const stars = '‚òÖ'.repeat(rating) + '‚òÜ'.repeat(5 - rating);
            const ratingOutOfFive = Math.max(0, Math.min(10, serie.averageRating)) / 2;
            const fullStars = Math.floor(ratingOutOfFive);
            const hasHalfStar = ratingOutOfFive % 1 >= 0.5;
            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

            const stars =
              '‚òÖ'.repeat(fullStars) +
              (hasHalfStar ? '‚Ø™' : '') + // o pots usar '‚≠í', '‚Ø™', '‚Ø®', , o una icona SVG
              '‚òÜ'.repeat(emptyStars);  

            const card = document.createElement('div');
            card.className = "min-w-[220px] bg-white rounded-lg p-4 shadow-lg text-center transform transition hover:scale-105 mx-3";


            const genreBadges = createGenreBadges(serie.genres);

                card.innerHTML = `
                <img src="/assets/tops.10.jpg" alt="TOP 10 BEST SERIES" class="w-full rounded-lg shadow-md border border-gray-200 object-contain mb-3"/>
                <h3 class="text-lg font-bold text-red-600">${serie.primaryTitle}</h3>
                <p class="text-xl text-yellow-500 font-semibold">${stars}</p>
                <p class="text-sm text-gray-700">${serie.averageRating} / 10</p>
                <p class="text-xs text-gray-500">üó≥Ô∏è ${serie.numVotes ?? '‚Äî'} vots</p>
                <div class="text-xs text-gray-600 mt-1">${genreBadges} <br><b> ${serie.startYear ?? '‚Äî'}</b></div>
                `;

            // üîó Comportament de clic: 
             card.addEventListener('click', () => {
              modalTitle.textContent = serie.primaryTitle;
              modalInfo.innerHTML = `
                <strong>Any:</strong> ${serie.startYear ?? '‚Äî'}<br>
                <strong>G√®neres:</strong> ${Array.isArray(serie.genres) ? serie.genres.join(', ') : (serie.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                <strong>Puntuaci√≥ mitjana:</strong> ${serie.averageRating ?? '‚Äî'}<br>
                <strong>Vots:</strong> ${serie.numVotes ?? '‚Äî'}<br><br>
                <a href="https://www.imdb.com/find?q=${encodeURIComponent(serie.primaryTitle)}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                    üîé Consulta a IMDb
                </a>
                `;
              modal.classList.remove('hidden');

                // ‚úçÔ∏è Enviar valoraci√≥
  
              const ratingButtonsContainer = document.getElementById('ratingButtons');
              ratingButtonsContainer.innerHTML = ''; // netejar abans de crear

              let selectedRating = null;

              for (let i = 1; i <= 10; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = 'px-3 py-1 border rounded hover:bg-indigo-100';
                btn.onclick = () => {
                  selectedRating = i;
                  document.querySelectorAll('#ratingButtons button').forEach(b => b.classList.remove('bg-indigo-300'));
                  btn.classList.add('bg-indigo-300');
                };
                ratingButtonsContainer.appendChild(btn);
              }

              document.getElementById('submitRating').onclick = () => {
                if (selectedRating !== null) {
                  alert(`Has valorat l'obra amb un ${selectedRating}/10!`);
                  modal.classList.add('hidden');
              // üî¢ Actualitzar numVotes i averageRating
                  serie.numVotes = (serie.numVotes ?? 0) + 1;
                  serie.averageRating = (
                    ((serie.averageRating ?? 0) * (serie.numVotes - 1) + selectedRating) / serie.numVotes
                  ).toFixed(1); // Arrodonir a 1 decimal

                  // üîÑ Actualitzar visualment la targeta (si cal)
                  //const updatedStars = '‚òÖ'.repeat(Math.round(serie.averageRating)) + '‚òÜ'.repeat(5 - Math.round(serie.averageRating));
                  
                  const ratingOutOfFive = (serie.averageRating / 10) * 5;
                  const fullStars = Math.floor(ratingOutOfFive);
                  const hasHalfStar = ratingOutOfFive % 1 >= 0.5;
                  const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                  const updatedStars =
                    '‚òÖ'.repeat(fullStars) +
                    (hasHalfStar ? '‚Ø™' : '') + // pots substituir '‚Ø®'per una icona que representi mitja estrella
                    '‚òÜ'.repeat(emptyStars);

                  card.querySelector('p.text-yellow-500').textContent = updatedStars;
                  card.querySelector('p.text-gray-700').textContent = `${serie.averageRating} / 10`;
                  card.querySelector('p.text-gray-500').textContent = `üó≥Ô∏è ${serie.numVotes} vots`;

                  // üîÑ Actualitzar tamb√© el contingut del modal
                  modalInfo.innerHTML = `
                    <strong>Tipus:</strong> ${serie.titleType ?? '‚Äî'}<br>
                    <strong>Any:</strong> ${serie.startYear ?? '‚Äî'}<br>
                    <strong>G√®neres:</strong> ${Array.isArray(serie.genres) ? serie.genres.join(', ') : (serie.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                    <strong>Puntuaci√≥ mitjana:</strong> ${serie.averageRating}<br>
                    <strong>Vots:</strong> ${serie.numVotes}<br><br>
                    <a href="https://www.imdb.com/find?q=${encodeURIComponent(item[field])}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                      üîé Consulta a IMDb
                    </a>
                    `;
                  modal.classList.add('hidden');                
                } else {
                  alert("Si us plau, selecciona una valoraci√≥ entre 0 i 10.");
                }
              };
            });
            seriesCarousel.appendChild(card);
        });
        };
          
        document.getElementById("nextBtnS").addEventListener("click", () => {
          if (currentPage < 1) {
            currentPage++;
            seriesCarousel.style.transform = `translateX(-${itemsPerPage * cardWidth}px)`;
          }
        });

        document.getElementById("prevBtnS").addEventListener("click", () => {
          if (currentPage > 0) {
            currentPage--;
            seriesCarousel.style.transform = `translateX(-${currentPage * itemsPerPage * cardWidth}px)`;
          }
        });

        document.addEventListener("DOMContentLoaded", loadSeries);

        //loadSeries();
        
      

      document.addEventListener("DOMContentLoaded", () => {
        const btnMovies = document.getElementById("btnMovies");
        const btnSeries = document.getElementById("btnSeries");
        const sortSelect = document.getElementById("sortSelect");
        const genreSelect = document.getElementById("genreSelect");
        const mediaGrid = document.getElementById("mediaGrid");

        let currentType = "movie";

        const loadMedia = async () => {
          mediaGrid.innerHTML = "";

          const { data, error } = await supabase
            .from("br1")
            .select("primaryTitle, startYear, genres, averageRating, numVotes, titleType")
            .eq("titleType", currentType)
            .gt("numVotes", 10000)
            .limit(100); // obtenim m√©s per poder filtrar

          if (error) {
            console.error("Error carregant dades:", error);
            return;
          }

          let filtered = data;

          // Filtrar per g√®nere
          const selectedGenre = genreSelect.value;
          if (selectedGenre) {
            filtered = filtered.filter(item =>
              item.genres?.toLowerCase().includes(selectedGenre.toLowerCase())
            );
          }

          // Ordenar
          const sort = sortSelect.value;
          if (sort === "rating") {
            filtered.sort((a, b) => (b.averageRating ?? 0) - (a.averageRating ?? 0));
          } else if (sort === "az") {
            filtered.sort((a, b) => (a.primaryTitle ?? "").localeCompare(b.primaryTitle ?? ""));
          } else if (sort === "za") {
            filtered.sort((a, b) => (b.primaryTitle ?? "").localeCompare(a.primaryTitle ?? ""));
          }

          // Mostrar m√†xim 20
          filtered.slice(0, 20).forEach(item => {
            
            const ratingOutOfFive = (item.averageRating / 10) * 5;
            const fullStars = Math.floor(ratingOutOfFive);
            const hasHalfStar = ratingOutOfFive % 1 >= 0.5;
            const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

            const updatedStars =
             '‚òÖ'.repeat(fullStars) +
              (hasHalfStar ? '‚Ø™' : '') + // pots substituir '‚Ø®', '‚Ø™' per una icona que representi mitja estrella
              '‚òÜ'.repeat(emptyStars);

            const card = document.createElement("div");
            card.className = "bg-white rounded-lg p-4 shadow text-center hover:scale-105 transition cursor-pointer";
            
            const imageSrc = currentType === "movie" ? "/assets/movies.jpg" : "/assets/series.png";

            card.innerHTML = `
              <img src="${imageSrc}" alt="${item.primaryTitle}" class="w-full h-40 object-cover rounded mb-2" />
              <h3 class="text-sm font-bold text-indigo-700">${item.primaryTitle}</h3>
              <p class="text-yellow-500">${updatedStars}</p>
              <p class="text-xs text-gray-600">${item.averageRating ?? '‚Äî'} / 10</p>
              <p class="text-xs text-gray-500">${item.startYear ?? '‚Äî'}</p>
            `;

            card.addEventListener('click', () => {
              modalTitle.textContent = item.primaryTitle;
              modalInfo.innerHTML = `
                <strong>Tipus:</strong> ${item.titleType ?? '‚Äî'}<br>
                <strong>Any:</strong> ${item.startYear ?? '‚Äî'}<br>
                <strong>G√®neres:</strong> ${Array.isArray(item.genres) ? item.genres.join(', ') : (item.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                <strong>Puntuaci√≥ mitjana:</strong> ${item.averageRating ?? '‚Äî'}<br>
                <strong>Vots:</strong> ${item.numVotes ?? '‚Äî'}<br><br>
                <a href="https://www.imdb.com/find?q=${encodeURIComponent(item.primaryTitle)}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                    üîé Consulta a IMDb
                </a>
                `;
              modal.classList.remove('hidden');

                // ‚úçÔ∏è Enviar valoraci√≥
  
              const ratingButtonsContainer = document.getElementById('ratingButtons');
              ratingButtonsContainer.innerHTML = ''; // netejar abans de crear

              let selectedRating = null;

              for (let i = 1; i <= 10; i++) {
                const btn = document.createElement('button');
                btn.textContent = i;
                btn.className = 'px-3 py-1 border rounded hover:bg-indigo-100';
                btn.onclick = () => {
                  selectedRating = i;
                  document.querySelectorAll('#ratingButtons button').forEach(b => b.classList.remove('bg-indigo-300'));
                  btn.classList.add('bg-indigo-300');
                };
                ratingButtonsContainer.appendChild(btn);
              }

              document.getElementById('submitRating').onclick = () => {
                if (selectedRating !== null) {
                  alert(`Has valorat l'obra amb un ${selectedRating}/10!`);
                  modal.classList.add('hidden');
                   // üî¢ Actualitzar numVotes i averageRating
                  item.numVotes = (item.numVotes ?? 0) + 1;
                  item.averageRating = (
                    ((item.averageRating ?? 0) * (item.numVotes - 1) + selectedRating) / item.numVotes
                  ).toFixed(1); // Arrodonir a 1 decimal

                  // üîÑ Actualitzar visualment la targeta (si cal)
                  //const updatedStars = '‚òÖ'.repeat(Math.round(item.averageRating)) + '‚òÜ'.repeat(5 - Math.round(item.averageRating));
                  const updatedStars =
                    '‚òÖ'.repeat(fullStars) +
                    (hasHalfStar ? '‚Ø®' : '') + // pots substituir '‚Ø®' per una icona que representi mitja estrella
                    '‚òÜ'.repeat(emptyStars);
                  
                  const ratingOutOfFive = (item.averageRating / 10) * 5;
                  const fullStars = Math.floor(ratingOutOfFive);
                  const hasHalfStar = ratingOutOfFive % 1 >= 0.5;
                  const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

                  

                  card.querySelector('p.text-yellow-500').textContent = updatedStars;
                  card.querySelector('p.text-gray-700').textContent = `${item.averageRating} / 10`;
                  card.querySelector('p.text-gray-500').textContent = `üó≥Ô∏è ${item.numVotes} vots`;

                  // üîÑ Actualitzar tamb√© el contingut del modal
                  modalInfo.innerHTML = `
                    <strong>Tipus:</strong> ${item.titleType ?? '‚Äî'}<br>
                    <strong>Any:</strong> ${item.startYear ?? '‚Äî'}<br>
                    <strong>G√®neres:</strong> ${Array.isArray(item.genres) ? item.genres.join(', ') : (item.genres?.replace(/^\{|\}$/g, '') ?? '‚Äî')}<br>
                    <strong>Puntuaci√≥ mitjana:</strong> ${item.averageRating}<br>
                    <strong>Vots:</strong> ${item.numVotes}<br><br>
                    <a href="https://www.imdb.com/find?q=${encodeURIComponent(item[field])}" target="_blank" class="bg-gray-100 text-indigo-700 px-3 py-1 rounded inline-block mt-2 hover:bg-gray-200">
                      üîé Consulta a IMDb
                    </a>
                    `;
                  modal.classList.add('hidden');                
                } else {
                  alert("Si us plau, selecciona una valoraci√≥ entre 0 i 10.");
                }
              };
            });

            mediaGrid.appendChild(card);
          });
        };

        // Event listeners
        btnMovies.addEventListener("click", () => {
          currentType = "movie";
          loadMedia();
        });

        btnSeries.addEventListener("click", () => {
          currentType = "tvSeries";
          loadMedia();
        });

        sortSelect.addEventListener("change", loadMedia);
        genreSelect.addEventListener("change", loadMedia);

        // Carrega inicial
        loadMedia();
      });

      document.addEventListener("DOMContentLoaded", () => {
        const btnTop10 = document.getElementById("showTop10");
        const btnExplorer = document.getElementById("showExplorer");

        const top10 = document.getElementById("top10Section");
        const series = document.getElementById("seriesSection");
        const explorer = document.getElementById("explorerSection");

        btnTop10.addEventListener("click", () => {
          top10.style.display = "block";
          series.style.display = "block";
          explorer.style.display = "none";
        });

        btnExplorer.addEventListener("click", () => {
          top10.style.display = "none";
          series.style.display = "none";
          explorer.style.display = "block";
        });

        // Opcional: mostrar nom√©s Top 10 per defecte
        btnTop10.click();
      });

    </script>
  </body>
</html>
